name: Setup tools shared
description: Setup platform tools

inputs:
  platform:
    description: "Runner platform"
    required: true
  build_type:
    description: "Release or Debug"
    required: true

runs:
  using: "composite"

  steps:
    - shell: bash
      if: inputs.platform == 'ubuntu-latest'
      run: sudo apt-get update -q
    - uses: actions/setup-python@v4.5.0
      with: 
        python-version: "3.8"
        cache: "pip"

    - shell: bash
      run: pip install -r requirements.txt
    - uses: seanmiddleditch/gha-setup-ninja@v3
    - uses: jwlawson/actions-setup-cmake@v1.13.1
    - name: Setup VS Dev Environment - Windows
      if: inputs.platform == 'windows-latest'
      uses: seanmiddleditch/gha-setup-vsdevenv@v4
    - name: Install SDL2 dependencies - Ubuntu
      if: inputs.platform == 'ubuntu-latest'
      shell: bash
      run: sudo apt-get install -y -q xorg-dev libudev-dev libts-dev libgl1-mesa-dev libegl-dev libegl1-mesa-dev
        && sudo apt-get install -y -q libglu1-mesa-dev libasound2-dev libpulse-dev libopenal-dev libogg-dev libxinerama-dev
        && sudo apt-get install -y -q libvorbis-dev libaudiofile-dev libfreetype6-dev libusb-dev libxrandr-dev
        && sudo apt-get install -y -q libdbus-1-dev zlib1g-dev libdirectfb-dev libgles-dev libibus-1.0-dev libx11-dev mesa-utils

    - name: Create test directory - Windows
      if: inputs.platform == 'windows-latest'
      shell: cmd
      run: |
        mkdir build/test/${{ inputs.build_type }}/x64

    - name: Install Mesa3D - Windows
      if: inputs.platform == 'windows-latest'
      shell: cmd
      run: |
        curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/22.3.5/mesa3d-22.3.5-release-msvc.7z
        "C:/Program Files/7-Zip/7z.exe" x mesa.7z
        mklink opengl32.dll "x64/opengl32.dll"
        mklink libglapi.dll "x64/libglapi.dll"
      working-directory: build/test/${{ inputs.build_type }}